---
- name: Ensure openssl-python-module is installed
  become: true
  pip:
    name: PyOpenSSL
    state: "{{ bbbackend__state }}"

- name: apt | self-signed certificate packages dependencies
  become: true
  apt:
    name: ssl-cert
    update_cache: yes
    cache_valid_time: 3600
    state: "{{ bbbackend__state }}"
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Ensure target directory exists
  file:
    dest: "{{ bbbackend__ssl_cert | dirname }}"
    state: directory
    mode: '0755'

- name: Check if OpenSSL private key exists
  become: true
  stat:
    path: "{{ bbbackend__ssl_key }}"
  register: private_key

- name: Generate an OpenSSL private key
  openssl_privatekey:
    path: "{{ bbbackend__ssl_key }}"
  when: not private_key.stat.exists

- name: Generate an OpenSSL Certificate Signing Request
  become: true
  openssl_csr:
    path: "{{ bbbackend__ssl_cert }}.csr"
    privatekey_path: "{{ bbbackend__ssl_key }}"
    organization_name: "{{ cert_orgname | default('Ansible') }}"
    common_name: "{{ ansible_fqdn }}"
    subject_alt_name: "{{ cert_san | default(omit) }}"
    email_address: "{{ cert_email | default(omit) }}"

- name: Generate SSL self-signed certificate
  become: true
  openssl_certificate:
    path: "{{ bbbackend__ssl_cert }}"
    privatekey_path: "{{ bbbackend__ssl_key }}"
    csr_path: "{{ bbbackend__ssl_cert }}.csr"
    provider: selfsigned

- name: Validate private key file permissions
  become: true
  file:
    path: "{{ bbbackend__ssl_key }}"
    owner: "root"
    group: "{% if ansible_os_family == 'Debian' %}ssl-cert{% else %}root{% endif %}"
    mode: '0440'
